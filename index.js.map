{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nconst API_KEY = \"50632256-d176889c05d2eb53a5e69ee7e\"; \nconst BASE_URL = \"https://pixabay.com/api/\";\n\n\nexport function getImagesByQuery(query) {\n    return axios.get(BASE_URL, {\n        params: {\n            key: API_KEY,\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: true,\n            per_page: 21\n        },\n    })\n    .then(response => {\n        return response.data.hits;\n    })\n    .catch(() => {\n        iziToast.error({\n            title: 'Error',\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight'\n        });\n        return [];\n    });\n}","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst gallery = document.querySelector(\".gallery\");\nlet lightbox = new SimpleLightbox(\".gallery a\", {\n    captionsData: 'alt', captionDelay: 250\n});\n\n\nexport function createGallery(images) {\n    const markup = images\n        .map(({ webformatURL, largeImageURL, tags, likes, comments, views, downloads }) => {\n            const processedTags = tags\n                .split(',')\n                .map(tag => tag.trim())\n                .slice(0, 5)\n                .join(', ');\n                return `<li class=\"gallery-item\">\n                <a href=\"${largeImageURL}\" class=\"gallery-item\">\n                    <div class=\"img-container\">\n                        <img src=\"${webformatURL}\" alt=\"${processedTags}\" />\n                        <ul class=\"overlay\">\n                            <li class=\"stats\">Likes ${likes}</li>\n                            <li class=\"stats\">Views ${views}</li>\n                            <li class=\"stats\">Comments ${comments}</li>\n                            <li class=\"stats\">Downloads ${downloads}</li>\n                        </ul>\n                    </div>\n                </a>\n            </li>`\n        })\n        .join(\"\");\n        \n    gallery.innerHTML = markup;\n    lightbox.refresh();\n}\n\nexport function clearGallery() {\n    gallery.innerHTML = \"\";\n}\n\nexport function showLoader() {\n    document.querySelector(\".loader\").classList.add(\"visible\");\n}\n\nexport function hideLoader() {\n    document.querySelector(\".loader\").classList.remove(\"visible\");\n}\n","import { getImagesByQuery } from \"./js/pixabay-api.js\";\nimport { createGallery, clearGallery, showLoader, hideLoader } from \"./js/render-functions.js\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst form = document.querySelector(\".form\");\nconst input = document.querySelector(\"input[name='search-text']\");\n\n\nform.addEventListener(\"submit\", event => {\n    event.preventDefault();\n\n    const query = input.value.trim();\n\n    if (!query) {\n        iziToast.error({\n            title: \"Error\",\n            message: \"Search query cannot be empty!\",\n            position: 'topRight'\n        });\n        return;\n    }\n\n    clearGallery();\n    showLoader();\n\n\n    getImagesByQuery(query)\n    .then(images => {\n        hideLoader();\n    \n        if (images.length === 0) {\n            iziToast.warning({\n                title: \"No results\",\n                message: \"Sorry, no images match your search query. Try again!\",\n                position: 'topRight'\n            });\n            return;\n        }\n    \n        createGallery(images);\n    })\n    \n    .catch(() => {\n        hideLoader();\n    \n        iziToast.error({\n            title: \"Error\",\n            message: \"Something went wrong. Please try again later!\",\n            position: 'topRight'\n        });\n    });\n    \n\n});"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","axios","response","gallery","lightbox","SimpleLightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","comments","views","downloads","processedTags","tag","clearGallery","showLoader","hideLoader","form","input","event","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAGV,SAASC,EAAiBC,EAAO,CACpC,OAAOC,EAAM,IAAIH,EAAU,CACvB,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACb,CACT,CAAK,EACA,KAAKE,GACKA,EAAS,KAAK,IACxB,EACA,MAAM,KACH,SAAS,MAAM,CACX,MAAO,QACP,QAAS,2EACT,SAAU,UACtB,CAAS,EACM,GACV,CACL,CCzBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjD,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC5C,aAAc,MAAO,aAAc,GACvC,CAAC,EAGM,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAASD,EACV,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,SAAAC,EAAU,MAAAC,EAAO,UAAAC,KAAgB,CAC/E,MAAMC,EAAgBL,EACjB,MAAM,GAAG,EACT,IAAIM,GAAOA,EAAI,MAAM,EACrB,MAAM,EAAG,CAAC,EACV,KAAK,IAAI,EACV,MAAO;AAAA,2BACIP,CAAa;AAAA;AAAA,oCAEJD,CAAY,UAAUO,CAAa;AAAA;AAAA,sDAEjBJ,CAAK;AAAA,sDACLE,CAAK;AAAA,yDACFD,CAAQ;AAAA,0DACPE,CAAS;AAAA;AAAA;AAAA;AAAA,kBAKnE,CAAS,EACA,KAAK,EAAE,EAEZZ,EAAQ,UAAYK,EACpBJ,EAAS,QAAO,CACpB,CAEO,SAASc,GAAe,CAC3Bf,EAAQ,UAAY,EACxB,CAEO,SAASgB,GAAa,CACzB,SAAS,cAAc,SAAS,EAAE,UAAU,IAAI,SAAS,CAC7D,CAEO,SAASC,GAAa,CACzB,SAAS,cAAc,SAAS,EAAE,UAAU,OAAO,SAAS,CAChE,CCzCA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,2BAA2B,EAGhED,EAAK,iBAAiB,SAAUE,GAAS,CACrCA,EAAM,eAAc,EAEpB,MAAMvB,EAAQsB,EAAM,MAAM,KAAI,EAE9B,GAAI,CAACtB,EAAO,CACRwB,EAAS,MAAM,CACX,MAAO,QACP,QAAS,gCACT,SAAU,UACtB,CAAS,EACD,MACH,CAEDN,IACAC,IAGApB,EAAiBC,CAAK,EACrB,KAAKO,GAAU,CAGZ,GAFAa,IAEIb,EAAO,SAAW,EAAG,CACrBiB,EAAS,QAAQ,CACb,MAAO,aACP,QAAS,uDACT,SAAU,UAC1B,CAAa,EACD,MACH,CAEDlB,EAAcC,CAAM,CAC5B,CAAK,EAEA,MAAM,IAAM,CACTa,IAEAI,EAAS,MAAM,CACX,MAAO,QACP,QAAS,gDACT,SAAU,UACtB,CAAS,CACT,CAAK,CAGL,CAAC"}